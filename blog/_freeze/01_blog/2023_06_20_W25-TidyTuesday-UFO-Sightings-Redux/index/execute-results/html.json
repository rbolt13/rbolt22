{
  "hash": "5400cb3277902ca40e2cd523f04075b6",
  "result": {
    "markdown": "---\ntitle: \"Week 25 Tidy Tuesday: UFO Sightings Redux\"\ndate: \"2023-06-20\"\ncategories: [\"#TidyTuesday\", R, \"Data Visuals\"]\ndraft: false\n---\n\n\nExplore the mysterious realm of unidentified flying objects as I dive into my Week 25 [#TidyTuesday](https://github.com/rfordatascience/tidytuesday) submission. In this otherworldly data visual I uncover intriguing patterns about sightings lasting less than 5 minutes in Oregon, all classified according to their reported shapes.  \n\n# UFO Sightings Redux\n\nThe data this week comes from the [National UFO Reporting Center](https://nuforc.org/webreports/ndxshape.html), [cleaned](https://github.com/jonthegeek/apis/blob/main/01_ufo-data.qmd) and [enriched](https://github.com/jonthegeek/apis/blob/main/01_ufo-enrich.qmd) with data from [sunrise-sunset.org](https://sunrise-sunset.org/) by [Jon Harmon](https://github.com/jonthegeek/apis/).\n\nIf this dataset looks familiar, that's because we [used a version of it back in 2019](https://tidytues.day/2019/2019-06-25). The new version adds the last several years of data, adds information about time-of-day, and cleans up some errors in the original dataset. We'd love to see visualizations describing the differences between the 2019 dataset and this new dataset!\n\n> The [National UFO Reporting Center](https://nuforc.org/) was founded in 1974 by noted UFO investigator [Robert J. Gribble](https://nuforc.org/gribble/). The Centerâ€™s primary function over the past five decades has been to receive, record, and to the greatest degree possible, corroborate and document reports from individuals who have been witness to unusual, possibly UFO-related events.  Throughout its history, the Center has processed over 170,000 reports, and has distributed its information to thousands of individuals.\n\n![](plot.png)\n\n# Code \n\nThis weeks code retains its core components of cleaning, visualizing, and styling, while the index.R file handles data loading, file execution, and the generation of a data visualization. \n\n::: {.panel-tabset}\n\n### Cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show Code\"}\n#### Load Packages ####\n# magrittr: %>% pipe function. \n# dplyr: data cleaning functions.\n# tidyr: data manipulation functions.\nbase::library(dplyr)\nbase::library(magrittr)\nbase::library(tidyr)\n\n#### Cleaning Function ####\nclean <- function(df){\n  # Filter date for Oregon\n  or_df <- df %>%\n    dplyr::filter(state == c(\"OR\")) %>%\n    dplyr::reframe(\n      shape = shape, \n      duration_seconds = duration_seconds,\n      duration_minutes = duration_seconds/60)\n  # remove nas \n  or_df$duration_seconds <- stats::na.omit(or_df$duration_seconds)\n  # Subset for all data 5 minutes or less\n  clean_df <- \n    base::subset(or_df, \n                 duration_seconds < 301) %>%\n    tidyr::replace_na(list(shape = c(\"not available\")))\n    \n  return(clean_df)\n}\n```\n:::\n\n\n### Visualize\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show Code\"}\n#### Load Packages ####\nbase::library(ggplot2)\n\n#### Visual Function ####\nvis <- function(clean_df){\n  vis <- ggplot2::ggplot(\n    clean_df,\n    ggplot2::aes(x = shape,\n                 y = duration_minutes,\n                 fill = shape,\n                 color = shape)) +\n    ggplot2::geom_boxplot(outlier.shape = NA) +\n    ggplot2::geom_jitter(\n      na.rm = TRUE, \n      color = \"#d2ff46\", \n      alpha = 0.7)\n  return(vis)\n}\n```\n:::\n\n\n### Style\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show Code\"}\n#### Load Packages ####\n# ggplot2: graphing functions.\n# showtext: font functions. \nbase::library(\"ggplot2\")\nbase::library(\"showtext\")\n\n#### Load Fonts ####\nsysfonts::font_add_google(\"Orbitron\", \"font\")\nshowtext::showtext_auto()\n\n#### Load Colors ####\ncol1 <- \"#d2ff46\"\ncol2 <- \"#0d0d0d\"\ncol3 <- \"white\"\n\n#### Axis Labels ####\naxis_labs <- c(\"changing\", \"orb\", \"formation\", \"oval\", \"unknown\",\n               \"cigar\", \"rectangle\", \"circle\", \"egg\", \"sphere\", \n               \"other\", \"light\", \"triangle\", \"teardrop\", \"cross\",\n               \"diamond\", \"cylinder\", \"disk\", \"fireball\", \"not available\", \n               \"flash\", \"chevron\", \"cone\")\n\n#### Style Function ####\nsty <- function(vis){\n  sty <- vis +\n    # labs\n    ggplot2::labs(\n      title = \"Shapes in Oregon: Short Sightings\",\n      subtitle = \"\\nThe following box plot displays the distribution of UFO sightings lasting less than 5 minutes in Oregon, categorized by \\ntheir reported shape. Among this subset of sightings, Cylinder, Disk, Fireball, Not Available, Flash, Chevron, and Cone \\nwere more frequently reported with durations of less than two minutes. In contrast, the Changing UFO shape was \\nobserved for a broader duration range, spanning from 2 to 5 minutes. \\n\\nThe asterisk (*) denotes the mean duration in minutes.\\n \",\n      caption = \"Randi Bolt - June 2023 \\n#TidyTuesday: UFO Sightings Redux\",\n      x = \"Shape\",\n      y = \"Duration in Minutes\")  +\n    # x and y axis\n    ggplot2::scale_y_continuous(limits = c(0,5)) + \n    ggplot2::scale_x_discrete(limits = axis_labs) +\n    # variable color and fill colors\n    ggplot2::scale_color_viridis_d() +\n    ggplot2::scale_fill_viridis_d(alpha = 0.6) +\n    # mean point\n    ggplot2::stat_summary(\n      fun = mean, \n      geom = \"point\", \n      shape = 8, \n      size = 4) +\n    # theme\n    ggplot2::theme(\n      # labs \n      plot.title = element_text(\n        size = 30,\n        family = \"font\",\n        face = \"bold\",\n        hjust = 0,\n        color = col1),\n      plot.subtitle = element_text(\n        size = 18,\n        family = \"font\",\n        hjust = 0,\n        color = col1),\n      plot.caption = element_text(\n        size = 12,\n        family = \"font\",\n        hjust = 1,\n        color = col1),\n      axis.title = element_text(\n        size = 24, \n        family = \"font\",\n        color = col1),\n      axis.text = element_text(\n        size = 18, \n        family = \"font\",\n        color = col1),\n      axis.text.x = element_text(\n        angle = 55,\n        vjust = .7), \n      plot.background = element_rect(fill = col2),\n      panel.background = element_rect(fill = col2),\n      panel.grid.major.x = element_blank(),\n      panel.grid.major.y = element_blank(),\n      panel.grid.minor.y = element_blank(),\n      legend.position = \"none\") \n  return(sty)\n}\n```\n:::\n\n\n### index.R\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show Code\"}\n#### Week ####\nweek <- c(\"25\")\n\n#### Load Packages ####\n# tidyverse: A collection of data-related packages.\nbase::library(tidyverse)\n\n#### Load Data ####\n# tt_data: ufo_sightings\ntt_data <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-20/ufo_sightings.csv')\n\n#### Clean Data ####\nclean_data <- clean(tt_data)\n\n#### Create Data Visual ####\nvis_data <- vis(clean_data)\n\n#### Style Data Visual ####\nsty_vis <- sty(vis_data)\n\n#### Save Plot ####\nggsave(\n  \"plot.png\", \n  width = 30, \n  height = 20, \n  units = \"cm\",\n  dpi = 150)\n```\n:::\n\n\n\n### Links\n\n[Week 25 Submission](https://github.com/rbolt13/tidytuesday/tree/main/2023/week_25) \n\n[TidyTuesday Repository](https://github.com/rbolt13/tidytuesday).\n\n\n:::\n\n# Quick Notes\n\n* I utilized `tidyr::replace_na()` in the cleaning function to replace missing values (NA) with the string 'not available'. \n\n* In the visualizing function, I opted to use `ggplot2::geom_jitter()` instead of `ggplot2::geom_point()` due to the nature of the data. Since the data points represent estimates of sighting durations, and they are mostly in minutes rather than specific seconds, using geom_point() would result in straight lines of dots across the box plots. Therefore, I decided to apply jittering using geom_jitter() to add some randomness to the point positions, which I deemed acceptable for visualizing the estimated sighting durations.\n\n* In the styling function, I utilized `ggplot2::scale_x_discrete(limits = axis_labs)` to define the order of the x-axis labels.  Note that if you misspell a word, the data will not appear on your graph. \n\n* As the styling function grows longer, I find myself considering the idea of splitting it up. One approach I might explore is separating the labels into their own distinct function. This way, I can assess whether this change significantly improves the readability of the styling function.\n\n* This visual raises some concerns, and I acknowledge the need to allocate more time for statistical analysis in the future. The following issues can be identified with this visual. \n\n1. Lack of statistical significance in the arrangement of UFO shapes along the x-axis: The order was chosen based on aesthetic and readability considerations, rather than any statistical criteria.\n\n2. Absence of statistical analysis for outlier elimination: Since the data was limited to sightings lasting 5 minutes or less, no statistical analysis was conducted to identify and eliminate outliers.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}