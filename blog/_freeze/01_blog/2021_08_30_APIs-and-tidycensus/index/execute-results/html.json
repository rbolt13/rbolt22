{
  "hash": "582435ab2a3e5158a5f9c8250a72d85c",
  "result": {
    "markdown": "---\ntitle: \"API's and tidycensus\"\nauthor: \"Randi Bolt\"\ndate: \"2021-08-30\"\ncategories: [R, tidycensus, API]\ntoc: true\n---\n\n\nThis post explains how to use an API to access tidycensus. \n\n![](../../00_img/tidycensus.png)\n\n# `1. Set-up`\n\n\n\n\n\nTo start [Request a Key](http://api.census.gov/data/key_signup.html) to get an API key. \n\nThen create an .Renviron file to your projects main directory with \"CENSUS_API_KEY=XXXXXXXXXXX\", where all the X's represent you key. \n\nNote: \n\n* This key will not work with spaces on either side of the equal sign.\n\n* tidycensus already has this utility worked into it (read ?census_api_key). They call their api key CENSUS_API_KEY (it is common for this key to be in all caps), so that is what I also called mine. This will be especially helpful in not mixing up API keys if I use other API keys in the future. \n\nNow load the `tidycensus` package and use `readRenviron()` to access the API key. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidycensus)\nbase::readRenviron(\"../../.Renviron\")\n```\n:::\n\n\nNote: \n\n* The first time you access your API key you may want to reload your environment so you don't have to restart R. \n\n* `../` tells your machine to go one folder outside the folder it is in. \n\n* Use `Sys.getenv(\"CENSUS_API_KEY\")` to check your key is accesible and correct.\n\n# `2. Using tidycensus`\n\nUse `load_variables(year, dataset, chache=T/F)` for various data sets. Read `?load_variables()` for more information. \n\nNote:\n\n* **label** shows the estimates by total, and then sex and age range.\n\n* **concept** is by sex, then race, origins, and ancestry.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- tidycensus::load_variables(2019, \"acs1\")\nutils::head(a, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   name       label                                    concept   \n   <chr>      <chr>                                    <chr>     \n 1 B01001_001 Estimate!!Total:                         SEX BY AGE\n 2 B01001_002 Estimate!!Total:!!Male:                  SEX BY AGE\n 3 B01001_003 Estimate!!Total:!!Male:!!Under 5 years   SEX BY AGE\n 4 B01001_004 Estimate!!Total:!!Male:!!5 to 9 years    SEX BY AGE\n 5 B01001_005 Estimate!!Total:!!Male:!!10 to 14 years  SEX BY AGE\n 6 B01001_006 Estimate!!Total:!!Male:!!15 to 17 years  SEX BY AGE\n 7 B01001_007 Estimate!!Total:!!Male:!!18 and 19 years SEX BY AGE\n 8 B01001_008 Estimate!!Total:!!Male:!!20 years        SEX BY AGE\n 9 B01001_009 Estimate!!Total:!!Male:!!21 years        SEX BY AGE\n10 B01001_010 Estimate!!Total:!!Male:!!22 to 24 years  SEX BY AGE\n```\n:::\n:::\n\n\nLet's only focus on the first line for now, \"B01001_001\" which should be the total estimates. Then we can use `get_acs()` to get data population data by state from the American Community Survey.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb <- tidycensus::get_acs(geography = \"state\", year = 2019, variable = \"B01001_001\")\nutils::head(b, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   GEOID NAME                 variable   estimate   moe\n   <chr> <chr>                <chr>         <dbl> <dbl>\n 1 01    Alabama              B01001_001  4876250    NA\n 2 02    Alaska               B01001_001   737068    NA\n 3 04    Arizona              B01001_001  7050299    NA\n 4 05    Arkansas             B01001_001  2999370    NA\n 5 06    California           B01001_001 39283497    NA\n 6 08    Colorado             B01001_001  5610349    NA\n 7 09    Connecticut          B01001_001  3575074    NA\n 8 10    Delaware             B01001_001   957248    NA\n 9 11    District of Columbia B01001_001   692683    NA\n10 12    Florida              B01001_001 20901636    NA\n```\n:::\n:::\n\n\nWe can get similar population estimates setting the variable = c(\"POP), with get_estimates. As well as \"DENSITY\"; for housing unit estimates, c(\"HUEST\"); and for components of change estimates, c(\"BIRTHS\", \"DEATHS\", \"DOMESTICMIG\", \"INTERNATIONALMIG\", \"NATURALINC\", \"NETMIG\", \"RBIRTH\", \"RDEATH\", \"RDOMESTICMIG\", \"RINTERNATIONALMIG\", \"RNATURALINC\", \"RNETMIG\").\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc <- tidycensus::get_estimates(geography = \"state\", year = 2019, variable = c(\"POP\"))\nutils::head(c, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 4\n   NAME                 GEOID variable    value\n   <chr>                <chr> <chr>       <dbl>\n 1 Alabama              01    POP       4903185\n 2 Alaska               02    POP        731545\n 3 Arizona              04    POP       7278717\n 4 Arkansas             05    POP       3017804\n 5 California           06    POP      39512223\n 6 Colorado             08    POP       5758736\n 7 Delaware             10    POP        973764\n 8 District of Columbia 11    POP        705749\n 9 Connecticut          09    POP       3565287\n10 Florida              12    POP      21477737\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tidycensus::get_estimates(geography = \"county\", state = \"OR\", year = 2019, variable = c(\"POP\"))\nutils::head(d, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 4\n   NAME                      GEOID variable  value\n   <chr>                     <chr> <chr>     <dbl>\n 1 Lane County, Oregon       41039 POP      382067\n 2 Washington County, Oregon 41067 POP      601592\n 3 Clatsop County, Oregon    41007 POP       40224\n 4 Jackson County, Oregon    41029 POP      220944\n 5 Grant County, Oregon      41023 POP        7199\n 6 Clackamas County, Oregon  41005 POP      418187\n 7 Tillamook County, Oregon  41057 POP       27036\n 8 Josephine County, Oregon  41033 POP       87487\n 9 Umatilla County, Oregon   41059 POP       77950\n10 Columbia County, Oregon   41009 POP       52354\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}