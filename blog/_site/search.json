[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Randi",
    "section": "",
    "text": "I graduated magna cum laude with a Bachelors of Science in Mathematics from Portland State University in 2022. Since most of my undergrad was during COVID-19 lock down Iâ€™ve become proficient at collaborating remotely. I ran remote study groups through discord, participated in the GIS (Geographic Information Systems) club, spoke virtually at G.I.S. in Action, and in the summer of 2021 created my first blog.\nCurrently I am looking for work as a data analyst, data scientist, or a machine learning engineer. My hope is that this blog will showcase my technical skills in these areas, determination, adaptability, and perseverance.\n\nðŸ“šBooks Iâ€™m Currently ReadingðŸ“š\nBasketball Analytics\nEtiquette Guide to Japan\nWeapons of Math Destruction\n\nðŸŽ¶Music Iâ€™m Currently Listening ToðŸŽ¶\nFace Your Fears - Crazy Ex Girlfriend\nHer Morning Elegance\nNever Thought - Mel Bryant\nPudgy - Smino\n\nðŸŽ¥Movies Iâ€™ve Watched RecentlyðŸŽ¥\nThe Terminator (1,2,3)\nPearl\nX\nThe Father"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Package Building\n\n\nR\n\n\nNBA\n\n\nSportsObserveR\n\n\n\n\n\n\n\n\n\n\n\nJan 2, 2023\n\n\nRandi Bolt\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nWeb-Scraping\n\n\nNBA\n\n\nData Visuals\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nStatistics\n\n\nLinear Regression\n\n\n\n\n\n\n\n\n\n\n\nDec 5, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nPython\n\n\nData Visuals\n\n\n\n\n\n\n\n\n\n\n\nNov 28, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nQuarto\n\n\n\n\n\n\n\n\n\n\n\nNov 21, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nNBA\n\n\nWeb-Scraping\n\n\nR\n\n\nSportsObserveR\n\n\n\n\n\n\n\n\n\n\n\nNov 7, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nMath\n\n\nProof\n\n\n\n\n\n\n\n\n\n\n\nOct 31, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nBayes\n\n\n\n\n\n\n\n\n\n\n\nAug 22, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nJul 25, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nNBA\n\n\nWeb-Scraping\n\n\nData Visuals\n\n\n\n\n\n\n\n\n\n\n\n\nJul 18, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nJun 27, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nStatistics\n\n\n\n\n\n\n\n\n\n\n\nJun 20, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nGeometry\n\n\n\n\n\n\n\n\n\n\n\nMay 30, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nMath\n\n\n\n\n\n\n\n\n\n\n\nMay 23, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nData Visuals\n\n\n\n\n\n\n\n\n\n\n\n\nApr 25, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nNLP\n\n\nData Visuals\n\n\n\n\n\n\n\n\n\n\n\nApr 18, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nMath\n\n\n\n\n\n\n\n\n\n\n\nMar 28, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nGeometry\n\n\n\n\n\n\n\n\n\n\n\nMar 21, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nFeb 28, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nData Visuals\n\n\n\n\n\n\n\n\n\n\n\nFeb 21, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nGeometry\n\n\n\n\n\n\n\n\n\n\n\nJan 31, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nMath\n\n\n\n\n\n\n\n\n\n\n\nJan 24, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nLinear Regression\n\n\n\n\n\n\n\n\n\n\n\nDec 20, 2021\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nProof\n\n\nStatistics\n\n\nLinear Regression\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2021\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nStatistics\n\n\n\n\n\n\n\n\n\n\n\nNov 22, 2021\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nMath\n\n\n\n\n\n\n\n\n\n\n\nOct 25, 2021\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nConditional Probabilty\n\n\nTree Diagrams\n\n\nStatistics\n\n\n\n\n\n\n\n\n\n\n\nOct 18, 2021\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nGenerative Art\n\n\n\n\n\n\n\n\n\n\n\nSep 27, 2021\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\ntidycensus\n\n\nAPI\n\n\n\n\n\n\n\n\n\n\n\nSep 20, 2021\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nData Visuals\n\n\n\n\n\n\n\n\n\n\n\nAug 30, 2021\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nQuarto\n\n\n\n\n\n\n\n\n\n\n\nAug 23, 2021\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nGeometry\n\n\nMath\n\n\nProof\n\n\n\n\n\n\n\n\n\n\n\nJul 26, 2021\n\n\nRandi Bolt\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nGeometry\n\n\nMath\n\n\nProof\n\n\n\n\n\n\n\n\n\n\n\nJul 19, 2021\n\n\nRandi Bolt\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Randi Bolt",
    "section": "",
    "text": "This website is currently under construction so be sure to check out the links below and my old blog which showcases all of my academic and personal projects from undergrad.\nI post bimonthly about a range of topics that are related to data science, statistics, mathematics, or machine learning. Check out my journey, and feel free to leave my posts comments. Iâ€™d love to hear from you!\nThanks for stopping by, and please enjoy!\nðŸ˜˜âœ¨"
  },
  {
    "objectID": "01_blog/2022_11_21_Quartro/index.html",
    "href": "01_blog/2022_11_21_Quartro/index.html",
    "title": "Quarto Links",
    "section": "",
    "text": "Quarto LinksQuarto BlogsOther Blogs\n\n\nA Quarto tip a day\nCreating a blog with Quarto in 10 steps - Bea Milz\nFrom R Markdown to Quarto\nInstalling and Configuring Python with RStudio\nManaging Execution\nQuarto: Creating a Blog (Documentation)\nQuarto/RMarkdown - Whatâ€™s Different: Repo\nquarto-trio (Using Python, R, and Apache Arrow)\n\n\nAbhirup Moitra\nBea Milz: Repo\nDaniel Tran: Repo\nDanielle Navarro - Notes from a data witch: Repo\nRober Mitchell: Repo\nSam Csik: Repo\nTed Landeras, PhD: repo\n\n\nAlicia Johnson (Made with blogdown))\nAllison Hill, PhD\nJenny Bryan (Made with Blogdown and Hugo): Repo\nJulia Silge (Made with Blogdown and Hugo): Repo\nMachine Learning Mastery!\nNan Xiao: Repo\nTanner Heffner (Made with Svelte): Repo\nYihui Xie"
  },
  {
    "objectID": "01_blog/2022_12_19_NBA-Salaries-Part-1-Web-Scraping/index.html",
    "href": "01_blog/2022_12_19_NBA-Salaries-Part-1-Web-Scraping/index.html",
    "title": "NBA Salaries - Part 1: Web-Scraping",
    "section": "",
    "text": "This post exhibits mainly a scraping function that saves and cleans data from ESPN - NBA Players Salaries, with some simple statistic and data visuals."
  },
  {
    "objectID": "01_blog/2022_12_19_NBA-Salaries-Part-1-Web-Scraping/index.html#change-salaray-from-character-to-numeric",
    "href": "01_blog/2022_12_19_NBA-Salaries-Part-1-Web-Scraping/index.html#change-salaray-from-character-to-numeric",
    "title": "NBA Salaries - Part 1: Web-Scraping",
    "section": "4.1 Change Salaray from Character to Numeric",
    "text": "4.1 Change Salaray from Character to Numeric\nNotice that the SALARY column is a character value. This will not be helpful when trying to do math, or make graphs with this numerical data. To change this 3 things must be addressed:\n\nRemoving the dollar sign.\nRemoving the commas.\nChange character type to numeric.\n\n\nnba_salaries_2023$SALARY <- str_remove_all(nba_salaries_2023$SALARY,\n                    \"\\\\$\")\nnba_salaries_2023$SALARY <- str_remove_all(nba_salaries_2023$SALARY,\n                    \",\")\nnba_salaries_2023$SALARY <- as.numeric(nba_salaries_2023$SALARY)\n\nNow we are able to do math, make graphs, and arrange the data by salary."
  },
  {
    "objectID": "01_blog/2022_12_19_NBA-Salaries-Part-1-Web-Scraping/index.html#basic-statistics",
    "href": "01_blog/2022_12_19_NBA-Salaries-Part-1-Web-Scraping/index.html#basic-statistics",
    "title": "NBA Salaries - Part 1: Web-Scraping",
    "section": "4.2 Basic Statistics",
    "text": "4.2 Basic Statistics\n\n\n\n\nHighest paid value : 48,070,014\nLowest paid value : 5,318\nMedian : 4,043,639\nMean : 8,599,110\nStandard Deviation : 10,152,995"
  },
  {
    "objectID": "01_blog/2022_12_19_NBA-Salaries-Part-1-Web-Scraping/index.html#box-plots",
    "href": "01_blog/2022_12_19_NBA-Salaries-Part-1-Web-Scraping/index.html#box-plots",
    "title": "NBA Salaries - Part 1: Web-Scraping",
    "section": "4.3 Box Plots",
    "text": "4.3 Box Plots\n\n4.3.1 2022 - 2023 Yearly Salary by Postion\n\nggplot2::ggplot(data = nba_salaries_2023,\n                mapping = ggplot2::aes(x = SALARY,\n                                       y = POSITION)) + \n  ggplot2::geom_boxplot()\n\n\n\n\nFrom this visual we can see that Point Guards (PG) appear to be paid the most, while Guards (G) and Forwards (F) on average are paid the least.\n\n\n4.4 2022-2023 Yearly Salary by Team\n\nggplot2::ggplot(data = nba_salaries_2023,\n                mapping = ggplot2::aes(x = SALARY,\n                                       y = TEAM)) + \n  ggplot2::geom_boxplot()\n\n\n\n\nThis plot is not the easiest to read, and might be worth sub-setting the information further. However eye-balling this visual we can see most teams pay between $2,000,000 and $15,000,000 per player with a few outliers. These outliers of course being superstar players."
  },
  {
    "objectID": "01_blog/2023_01_09_Decision-Tree/index.html",
    "href": "01_blog/2023_01_09_Decision-Tree/index.html",
    "title": "Decision Trees - Shipwreak Data",
    "section": "",
    "text": "This is â€¦.\n[picture]"
  },
  {
    "objectID": "01_blog/2023_01_09_Decision-Tree/index.html#load-packages",
    "href": "01_blog/2023_01_09_Decision-Tree/index.html#load-packages",
    "title": "Decision Trees - Shipwreak Data",
    "section": "Load Packages",
    "text": "Load Packages\n\nimport numpy as np\nimport pandas as pd\nimport regex\nimport xgboost as xgb\nimport seaborn as sns\nfrom IPython import get_ipython\nget_ipython().run_line_magic('matplotlib', 'inline')\n\n\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\n\n\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom IPython.display import Image as PImage\nfrom subprocess import check_call\nfrom PIL import Image, ImageDraw, ImageFont"
  },
  {
    "objectID": "01_blog/2023_01_09_Decision-Tree/index.html#data",
    "href": "01_blog/2023_01_09_Decision-Tree/index.html#data",
    "title": "Decision Trees - Shipwreak Data",
    "section": "Data",
    "text": "Data\n\nimport numpy as np\nimport pandas as pd\n\nfrom pandas import Series, DataFrame\n\n\ntitanic = pd.read_csv(\"../../00_data/titanic_data.csv\")\ntitanic.head()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Name\n      Sex\n      Age\n      SibSp\n      Parch\n      Ticket\n      Fare\n      Cabin\n      Embarked\n    \n  \n  \n    \n      0\n      1\n      0\n      3\n      Braund, Mr. Owen Harris\n      male\n      22.0\n      1\n      0\n      A/5 21171\n      7.2500\n      NaN\n      S\n    \n    \n      1\n      2\n      1\n      1\n      Cumings, Mrs. John Bradley (Florence Briggs Th...\n      female\n      38.0\n      1\n      0\n      PC 17599\n      71.2833\n      C85\n      C\n    \n    \n      2\n      3\n      1\n      3\n      Heikkinen, Miss. Laina\n      female\n      26.0\n      0\n      0\n      STON/O2. 3101282\n      7.9250\n      NaN\n      S\n    \n    \n      3\n      4\n      1\n      1\n      Futrelle, Mrs. Jacques Heath (Lily May Peel)\n      female\n      35.0\n      1\n      0\n      113803\n      53.1000\n      C123\n      S\n    \n    \n      4\n      5\n      0\n      3\n      Allen, Mr. William Henry\n      male\n      35.0\n      0\n      0\n      373450\n      8.0500\n      NaN\n      S\n    \n  \n\n\n\n\n\ntitanic.head()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Name\n      Sex\n      Age\n      SibSp\n      Parch\n      Ticket\n      Fare\n      Cabin\n      Embarked\n    \n  \n  \n    \n      0\n      1\n      0\n      3\n      Braund, Mr. Owen Harris\n      male\n      22.0\n      1\n      0\n      A/5 21171\n      7.2500\n      NaN\n      S\n    \n    \n      1\n      2\n      1\n      1\n      Cumings, Mrs. John Bradley (Florence Briggs Th...\n      female\n      38.0\n      1\n      0\n      PC 17599\n      71.2833\n      C85\n      C\n    \n    \n      2\n      3\n      1\n      3\n      Heikkinen, Miss. Laina\n      female\n      26.0\n      0\n      0\n      STON/O2. 3101282\n      7.9250\n      NaN\n      S\n    \n    \n      3\n      4\n      1\n      1\n      Futrelle, Mrs. Jacques Heath (Lily May Peel)\n      female\n      35.0\n      1\n      0\n      113803\n      53.1000\n      C123\n      S\n    \n    \n      4\n      5\n      0\n      3\n      Allen, Mr. William Henry\n      male\n      35.0\n      0\n      0\n      373450\n      8.0500\n      NaN\n      S"
  },
  {
    "objectID": "01_blog/2023_01_09_Decision-Tree/index.html#split-data",
    "href": "01_blog/2023_01_09_Decision-Tree/index.html#split-data",
    "title": "Decision Trees - Shipwreak Data",
    "section": "split data",
    "text": "split data\n\ny=titanic.Survived\nx=titanic.drop('Survived', axis=1)\n\n\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)\nx_train.head\n\n<bound method NDFrame.head of      PassengerId  Pclass                                  Name     Sex   Age  \\\n95            96       3           Shorney, Mr. Charles Joseph    male   NaN   \n123          124       2                   Webber, Miss. Susan  female  32.5   \n151          152       1     Pears, Mrs. Thomas (Edith Wearne)  female  22.0   \n162          163       3            Bengtsson, Mr. John Viktor    male  26.0   \n870          871       3                     Balkic, Mr. Cerin    male  26.0   \n..           ...     ...                                   ...     ...   ...   \n249          250       2         Carter, Rev. Ernest Courtenay    male  54.0   \n890          891       3                   Dooley, Mr. Patrick    male  32.0   \n490          491       3  Hagland, Mr. Konrad Mathias Reiersen    male   NaN   \n110          111       1        Porter, Mr. Walter Chamberlain    male  47.0   \n36            37       3                      Mamee, Mr. Hanna    male   NaN   \n\n     SibSp  Parch  Ticket     Fare Cabin Embarked  \n95       0      0  374910   8.0500   NaN        S  \n123      0      0   27267  13.0000  E101        S  \n151      1      0  113776  66.6000    C2        S  \n162      0      0  347068   7.7750   NaN        S  \n870      0      0  349248   7.8958   NaN        S  \n..     ...    ...     ...      ...   ...      ...  \n249      1      0  244252  26.0000   NaN        S  \n890      0      0  370376   7.7500   NaN        Q  \n490      1      0   65304  19.9667   NaN        S  \n110      0      0  110465  52.0000  C110        S  \n36       0      0    2677   7.2292   NaN        C  \n\n[712 rows x 11 columns]>"
  }
]